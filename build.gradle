buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.hanami.cms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
	//dependencies
	compile 'org.xeustechnologies:jcl-core:2.8'

    //rxjava-jdbc
	compile 'com.github.davidmoten:rxjava2-jdbc:0.2.1'

	// Reactor Adapter (RxJava2, Akka Actors scheduler and more)
	compile "io.projectreactor.addons:reactor-adapter:3.2.0.RELEASE"

	//data db
	compile("com.h2database:h2:1.4.197") // or developmentOnly

	// jwt lib
	compile 'com.auth0:java-jwt:3.4.1'
	compile 'com.nimbusds:nimbus-jose-jwt:6.4.2'
    
    //dev devtools
    developmentOnly("org.springframework.boot:spring-boot-devtools") //runtimeOnly ??

	// sugar syntax and helper
	compile 'org.projectlombok:lombok:1.18.4'

    // sub module dependencies
	compile project(':sdk')
	
	//spring web-flux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-security")
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	//testImplementation('org.springframework.security:spring-security-test')
	testImplementation('io.projectreactor:reactor-test')

	//junit test
	testCompile group: 'junit', name: 'junit', version: '4.12'
	
	// Integrate spring shell or crash
	// Integrate flyway for database migration version control
	// Use neo4j to manage taxonomy system
	// Use elastic search to provide a search system embedded engine https://github.com/allegro/embedded-elasticsearch
	// For caching Ehcache JSR-107 “JCache” API or see https://spring.io/guides/gs/caching/
}

//	        			from spring initializr

// implementation('org.springframework.boot:spring-boot-starter-web')
// runtimeOnly('org.springframework.boot:spring-boot-devtools')
// runtimeOnly('com.h2database:h2')
// testImplementation('org.springframework.boot:spring-boot-starter-test')
// testImplementation('io.projectreactor:reactor-test')
